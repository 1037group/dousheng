// Code generated by hertz generator.

package douyin_api

import (
	"context"
	douyin_api "github.com/1037group/dousheng/cmd/api/biz/model/douyin_api"
	"github.com/1037group/dousheng/cmd/api/biz/rpc"
	"github.com/1037group/dousheng/kitex_gen/douyin_feed"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/jinzhu/copier"
)

// Feed .
// @router /douyin/feed [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var req douyin_api.FeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	rpcResp, err := rpc.Feed(context.Background(), &douyin_feed.FeedRequest{
		LatestTime: req.LatestTime,
		Token:      req.Token,
	})
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	resp := new(douyin_api.FeedResponse)
	copier.Copy(&resp, &rpcResp)

	c.JSON(consts.StatusOK, resp)
}

// UserLogin .
// @router /douin/user/login [POST]
func UserLogin(ctx context.Context, c *app.RequestContext) {
	var err error
	var req douyin_api.UserLoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(douyin_api.UserLoginResponse)

	c.JSON(consts.StatusOK, resp)
}

// UserRegister .
// @router /douin/user/register [POST]
func UserRegister(ctx context.Context, c *app.RequestContext) {
	var err error
	var req douyin_api.UserRegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(douyin_api.UserRegisterResponse)

	c.JSON(consts.StatusOK, resp)
}

// User .
// @router /douin/user [GET]
func User(ctx context.Context, c *app.RequestContext) {
	var err error
	var req douyin_api.UserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(douyin_api.UserResponse)

	c.JSON(consts.StatusOK, resp)
}
